import React, { useState } from 'react'
import Link from 'next/link'
import { HeaderLayout } from '@/components/layouts/header-layout'
import {
  Github,
  Linkedin,
  Mail,
  Send,
  MessageSquare,
  Users,
  Award,
  Book,
  BookOpen,
  Sparkles,
  Code,
  ChevronDown,
  ChevronUp,
} from 'lucide-react'

const teamMembers = [
  {
    name: 'Sarah Johnson',
    role: 'Founder & CEO',
    bio: 'Former educator with 10+ years of experience in curriculum development and edtech.',
    avatar: '/placeholder.svg',
    social: {
      github: 'https://github.com/sarahjohnson',
      linkedin: 'https://linkedin.com/in/sarahjohnson',
      email: 'sarah@vskill.edu',
    },
  },
  {
    name: 'Alex Chen',
    role: 'CTO',
    bio: 'Full-stack developer with a passion for creating intuitive learning experiences.',
    avatar: '/placeholder.svg',
    social: {
      github: 'https://github.com/alexchen',
      linkedin: 'https://linkedin.com/in/alexchen',
      email: 'alex@vskill.edu',
    },
  },
  {
    name: 'Miguel Hernandez',
    role: 'Chief Learning Officer',
    bio: 'PhD in Educational Psychology focusing on online learning methodologies.',
    avatar: '/placeholder.svg',
    social: {
      github: 'https://github.com/miguelhernandez',
      linkedin: 'https://linkedin.com/in/miguelhernandez',
      email: 'miguel@vskill.edu',
    },
  },
  {
    name: 'Priya Patel',
    role: 'Head of Content',
    bio: 'Author and former university professor specializing in creating engaging educational content.',
    avatar: '/placeholder.svg',
    social: {
      github: 'https://github.com/priyapatel',
      linkedin: 'https://linkedin.com/in/priyapatel',
      email: 'priya@vskill.edu',
    },
  },
  {
    name: 'David Wilson',
    role: 'UX/UI Designer',
    bio: 'Award-winning designer focused on creating accessible and beautiful interfaces.',
    avatar: '/placeholder.svg',
    social: {
      github: 'https://github.com/davidwilson',
      linkedin: 'https://linkedin.com/in/davidwilson',
      email: 'david@vskill.edu',
    },
  },
  {
    name: 'Jasmine Kim',
    role: 'Community Manager',
    bio: 'Social media expert with experience building vibrant online learning communities.',
    avatar: '/placeholder.svg',
    social: {
      github: 'https://github.com/jasminekim',
      linkedin: 'https://linkedin.com/in/jasminekim',
      email: 'jasmine@vskill.edu',
    },
  },
]

const faqs = [
  {
    question: 'What is vskill?',
    answer:
      'vskill is an experiment in creating AI-generated course content. You enter a subject you are curious about, and our system generates an entire course on it using GPT-4.',
  },
  {
    question: 'How do I access a generated course?',
    answer:
      'Once you sign up, you can choose to receive the course via email or read it directly on the site. Your progress will be tracked automatically.',
  },
  {
    question: 'Can I interact with the AI?',
    answer:
      'Absolutely! You can chat with the AI to ask questions about any unit in the course, making your learning experience interactive and personalized.',
  },
  {
    question: 'Who is behind this project?',
    answer:
      'vskill is inspired by the work of Alex MacCaw and built as an experimental platform to push the boundaries of AI-driven education.',
  },
]

export default function About() {
  const [name, setName] = useState('')
  const [email, setEmail] = useState('')
  const [message, setMessage] = useState('')
  const [expandedFaq, setExpandedFaq] = useState<number | null>(null)

  const toggleFaq = (index: number) => {
    setExpandedFaq(expandedFaq === index ? null : index)
  }

  const handleContactSubmit = (e: React.FormEvent) => {
    e.preventDefault()
    if (!name.trim() || !email.trim() || !message.trim()) {
      alert('Please fill in all fields.')
      return
    }
    console.log('Contact form submitted:', { name, email, message })
    alert("We've received your message and will get back to you soon.")
    setName('')
    setEmail('')
    setMessage('')
  }

  return (
    <HeaderLayout>
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        {/* Original Hero Section */}
        <section className="prose prose-headings:text-xl dark:prose-invert text-center mb-16">
          <h1>About</h1>
          <p>vskill is an experiment in creating AI generated course contents.</p>
          <p>
            It works like this: you enter something you&apos;re curious about and then we generate a course on the subject.
            The course is generated by GPT-4 based on your input.
          </p>
          <p>
            You can choose to receive the course via email, or read it on the site.
            We&apos;ll keep track of your progress.
          </p>
          <p>
            You can also chat with the AI to ask it questions about any given unit in the course.
          </p>
          <p>
            An{' '}
            <a href="https://alexmaccaw.com" className="text-indigo-600 hover:underline">
              Alex MacCaw
            </a>{' '}
            project.
          </p>
        </section>

        {/* Mission Section */}
        <section className="mb-16">
          <h2 className="text-3xl font-bold text-center text-gray-900 dark:text-white mb-4">Our Mission</h2>
          <p className="text-center text-gray-600 dark:text-gray-400 mb-4">
            At vskill, we believe learning is not just about consuming content—it’s about connecting, sharing knowledge, and building a community of lifelong learners.
          </p>
          <p className="text-center text-gray-600 dark:text-gray-400">
            Our mission is to merge AI-driven course generation with community engagement to deliver a personalized and interactive learning experience.
          </p>
        </section>

        {/* Quote Section */}
        <section className="mb-16 py-12 px-4 bg-gray-100 dark:bg-gray-800 rounded-lg text-center">
          <BookOpen className="h-12 w-12 text-indigo-600 mx-auto mb-4" />
          <blockquote className="text-2xl md:text-3xl font-medium text-gray-900 dark:text-white italic mb-4">
            "Education is not the filling of a pail, but the lighting of a fire."
          </blockquote>
          <cite className="text-gray-600 dark:text-gray-400">— William Butler Yeats</cite>
        </section>

        {/* Team Section */}
        <section id="team" className="mb-16">
          <h2 className="text-3xl font-bold text-center text-gray-900 dark:text-white mb-8">Meet Our Team</h2>
          <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6">
            {teamMembers.map((member, index) => (
              <div key={index} className="border border-gray-200 dark:border-gray-700 rounded-lg p-6 hover:shadow-lg transition-shadow">
                <div className="flex flex-col items-center text-center">
                  <div className="h-20 w-20 rounded-full mb-4 overflow-hidden">
                    <img src={member.avatar} alt={member.name} className="object-cover h-full w-full" />
                  </div>
                  <h3 className="text-lg font-semibold mb-1">{member.name}</h3>
                  <p className="text-indigo-600 mb-2">{member.role}</p>
                  <p className="text-gray-600 dark:text-gray-400 text-sm mb-4">{member.bio}</p>
                  <div className="flex space-x-3">
                    <a
                      href={member.social.github}
                      target="_blank"
                      rel="noopener noreferrer"
                      className="text-gray-400 hover:text-gray-800 dark:hover:text-gray-200"
                    >
                      <Github className="h-5 w-5" />
                    </a>
                    <a
                      href={member.social.linkedin}
                      target="_blank"
                      rel="noopener noreferrer"
                      className="text-gray-400 hover:text-gray-800 dark:hover:text-gray-200"
                    >
                      <Linkedin className="h-5 w-5" />
                    </a>
                    <a
                      href={`mailto:${member.social.email}`}
                      className="text-gray-400 hover:text-gray-800 dark:hover:text-gray-200"
                    >
                      <Mail className="h-5 w-5" />
                    </a>
                  </div>
                </div>
              </div>
            ))}
          </div>
        </section>

        {/* FAQ Section */}
        <section id="faq" className="mb-16">
          <h2 className="text-3xl font-bold text-center text-gray-900 dark:text-white mb-8">Frequently Asked Questions</h2>
          <div className="max-w-3xl mx-auto space-y-4">
            {faqs.map((faq, index) => (
              <div key={index} className="border border-gray-200 dark:border-gray-700 rounded-lg overflow-hidden">
                <button
                  className="flex justify-between items-center w-full p-4 text-left font-medium focus:outline-none bg-white dark:bg-gray-900"
                  onClick={() => toggleFaq(index)}
                >
                  <span>{faq.question}</span>
                  {expandedFaq === index ? (
                    <ChevronUp className="h-5 w-5 text-gray-500" />
                  ) : (
                    <ChevronDown className="h-5 w-5 text-gray-500" />
                  )}
                </button>
                {expandedFaq === index && (
                  <div className="p-4 bg-gray-50 dark:bg-gray-800 border-t border-gray-200 dark:border-gray-700">
                    <p className="text-gray-600 dark:text-gray-400">{faq.answer}</p>
                  </div>
                )}
              </div>
            ))}
          </div>
        </section>

        {/* Contact Section */}
        <section id="contact" className="mb-8">
          <h2 className="text-3xl font-bold text-center text-gray-900 dark:text-white mb-8">Get in Touch</h2>
          <div className="grid grid-cols-1 md:grid-cols-2 gap-8">
            <div>
              <p className="text-gray-600 dark:text-gray-400 mb-4">
                Have questions, suggestions, or just want to say hello? Fill out the form below and our team will get back to you as soon as possible.
              </p>
              <div className="space-y-4">
                <div className="flex items-start">
                  <Mail className="h-5 w-5 text-indigo-600 mr-3 mt-0.5" />
                  <div>
                    <h3 className="text-sm font-semibold">Email Us</h3>
                    <p className="text-gray-600 dark:text-gray-400">info@101.school</p>
                  </div>
                </div>
                <div className="flex items-start">
                  <MessageSquare className="h-5 w-5 text-indigo-600 mr-3 mt-0.5" />
                  <div>
                    <h3 className="text-sm font-semibold">Live Chat</h3>
                    <p className="text-gray-600 dark:text-gray-400">Available Monday-Friday, 9am-5pm EST</p>
                  </div>
                </div>
                <div className="flex items-start">
                  <Code className="h-5 w-5 text-indigo-600 mr-3 mt-0.5" />
                  <div>
                    <h3 className="text-sm font-semibold">Developers</h3>
                    <p className="text-gray-600 dark:text-gray-400">Check out our GitHub repository</p>
                  </div>
                </div>
              </div>
            </div>
            <div>
              <form onSubmit={handleContactSubmit} className="space-y-4">
                <div className="space-y-2">
                  <label htmlFor="name" className="text-sm font-medium">Name</label>
                  <input
                    id="name"
                    placeholder="Your name"
                    value={name}
                    onChange={(e) => setName(e.target.value)}
                    required
                    className="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:outline-none focus:ring-2 focus:ring-indigo-500"
                  />
                </div>
                <div className="space-y-2">
                  <label htmlFor="email" className="text-sm font-medium">Email</label>
                  <input
                    id="email"
                    type="email"
                    placeholder="your@email.com"
                    value={email}
                    onChange={(e) => setEmail(e.target.value)}
                    required
                    className="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:outline-none focus:ring-2 focus:ring-indigo-500"
                  />
                </div>
                <div className="space-y-2">
                  <label htmlFor="message" className="text-sm font-medium">Message</label>
                  <textarea
                    id="message"
                    placeholder="Your message..."
                    value={message}
                    onChange={(e) => setMessage(e.target.value)}
                    className="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:outline-none focus:ring-2 focus:ring-indigo-500 min-h-[120px]"
                    required
                  ></textarea>
                </div>
                <button
                  type="submit"
                  className="w-full flex items-center justify-center px-4 py-2 bg-indigo-600 text-white rounded-md hover:bg-indigo-700 transition duration-300"
                >
                  <Send className="mr-2 h-4 w-4" />
                  Send Message
                </button>
              </form>
            </div>
          </div>
        </section>

        {/* Footer Navigation */}
        <footer className="text-sm text-center text-gray-500 dark:text-gray-400 mt-10">
          <Link prefetch={false} href="/terms">Terms of Service</Link> and{' '}
          <Link prefetch={false} href="/privacy">Privacy Policy</Link>
        </footer>
      </div>
    </HeaderLayout>
  )
}
